<prism:PrismApplication
    x:Class="Consumption.PC.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:local="clr-namespace:Consumption.PC"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:showMeTheXaml="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
    xmlns:smtxAe="clr-namespace:ShowMeTheXAML.AvalonEdit;assembly=ShowMeTheXAML.AvalonEdit"
    ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ShowMeTheXAML.AvalonEdit;component/Themes/xamldisplayer.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style BasedOn="{StaticResource {x:Type showMeTheXaml:XamlDisplay}}" TargetType="showMeTheXaml:XamlDisplay">
                <Style.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                        </ResourceDictionary.MergedDictionaries>

                        <smtxAe:TextDocumentValueConverter x:Key="TextDocumentValueConverter" />
                    </ResourceDictionary>
                </Style.Resources>
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="showMeTheXaml:XamlDisplay">
                            <DockPanel>
                                <materialDesign:PopupBox
                                    x:Name="PopupBox"
                                    Padding="10"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    StaysOpen="True">
                                    <materialDesign:PopupBox.ToggleContent>
                                        <materialDesign:PackIcon
                                            Margin="3"
                                            Background="Transparent"
                                            Cursor="Hand"
                                            Foreground="{DynamicResource PrimaryHueDarkBrush}"
                                            Kind="Xaml"
                                            ToolTip="View XAML">
                                            <materialDesign:PackIcon.Style>
                                                <Style BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}" TargetType="materialDesign:PackIcon">
                                                    <Setter Property="Opacity" Value="0.2" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </materialDesign:PackIcon.Style>
                                        </materialDesign:PackIcon>
                                    </materialDesign:PopupBox.ToggleContent>
                                    <Border MaxWidth="800" MaxHeight="600">
                                        <DockPanel>
                                            <Button
                                                Margin="0,10,0,0"
                                                HorizontalAlignment="Right"
                                                Command="Copy"
                                                CommandParameter="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}"
                                                Content="_COPY"
                                                DockPanel.Dock="Bottom"
                                                Style="{StaticResource MaterialDesignRaisedButton}"
                                                Tag="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <avalonEdit:TextEditor Document="{Binding Xaml, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextDocumentValueConverter}}" Style="{StaticResource AvalonTextEditorXamlDisplay}" />
                                        </DockPanel>
                                    </Border>

                                </materialDesign:PopupBox>
                                <Grid>
                                    <AdornerDecorator>
                                        <Border
                                            Margin="-5"
                                            BorderBrush="{DynamicResource SecondaryAccentBrush}"
                                            Opacity=".4">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=PopupBox, Path=IsPopupOpen}" Value="True">
                                                            <Setter Property="BorderThickness" Value="5" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                    </AdornerDecorator>
                                    <ContentPresenter />
                                </Grid>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</prism:PrismApplication>
